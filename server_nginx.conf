	# Enable upgrading of connection (and websocket proxying) depending on the
	# presence of the upgrade field in the client request header
	#map \$http_upgrade \$connection_upgrade {
	#default upgrade;
	#'' close;
	#}
	 
	# Create an upstream alias to where we've set daphne to bind to
	upstream Alexa_Server {
	server 127.0.0.1:8000;
	}


    server {
       listen         80;
       server_name    talktoyourdata.upc.edu;
       return         301 https://$server_name$request_uri;
}

	server {

	listen   443;

    ssl    on;
    ssl_certificate    /home/alexa_server/Alexa_Server/keys/certificate.pem;
    ssl_certificate_key    /home/alexa_server/Alexa_Server/keys/private-key.pem;

	#listen 80;
	# If you have a domain name, this is where to add it
	server_name talktoyourdata.upc.edu;
	 
	location / {
	# Pass request to the upstream alias
	proxy_pass http://Alexa_Server;
	 
	# Require http version 1.1 to allow for upgrade requests
	proxy_http_version 1.1;
	 
	# We want proxy_buffering off for proxying to websockets.
	proxy_buffering off;
	 
	# http://en.wikipedia.org/wiki/X-Forwarded-For
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	 
	# enable this if you use HTTPS:
	# proxy_set_header X-Forwarded-Proto https;
	 
	# pass the Host: header from the client for the sake of redirects
	proxy_set_header Host $http_host;
	 
	# We've set the Host header, so we don't need Nginx to muddle
	# about with redirects
	proxy_redirect off;
	 
	# Depending on the request value, set the Upgrade and
	# connection headers
	proxy_set_header Upgrade $http_upgrade;
	 
	proxy_set_header Connection "upgrade";
	}
	}
