"""
Django settings for AlexaInterface project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f43z4khzz7$6eptzh7d%n^li=z5s^-ixjf@6ea1otm5!#@(v0l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #own Apps
    'django_alexa',
    'rest_framework',
    'AlexaHandler',
    'channels',
]

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "ROUTING": "AlexaHandler.routing.channel_routing",
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AlexaInterface.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ]
        },
    },
]

WSGI_APPLICATION = 'AlexaInterface.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    "/static/AlexaHandler"
]

CACHES = {
    # DB Cache Backend
    # 'default': {
    #     'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
    #     'LOCATION': 'cache_table',
    # }
    # Memcached Backend
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}


# either SERVER or LOCAL
ENV = "LOCAL"
# your domain
BASE_URL = "talktoyourdata.upc.edu/"
# base directory
DIR = os.path.dirname(__file__)
print("SETTINGS DIRECTORY: ", DIR)
# CACHE Directory
CACHE_DIR = (
        os.path.abspath(os.path.join(DIR, '..', 'cache'))
    )

IMPORT_DIR = (
        os.path.abspath(os.path.join(DIR, '..', 'import'))
    )

EXPORT_DIR = (
        os.path.abspath(os.path.join(DIR, '..', 'export'))
)

print("CACHE: ", CACHE_DIR)
print("IMPORT: ", IMPORT_DIR)
print("EXPORT: ", EXPORT_DIR)

if ENV is "SERVER":
    #SERVER VERSION
    CACHE_URL = (
        "https://" + BASE_URL + "AlexaHandler/cache"
    )
    SOCKET_URL = (
        "wss://" + BASE_URL + "alexa"
    )

else:
    # LOCAL VERSION
    CACHE_URL = (
        "http://localhost:8000/AlexaHandler/cache"
    )
    SOCKET_URL = (
        "ws://localhost:8000/alexa"
    )

SECURE_SSL_REDIRECT = False
LOGIN_REDIRECT_URL = '/'
# set Amazon Skill ID
os.environ["ALEXA_APP_ID_AlexaHandler"] = "amzn1.ask.skill.bf6e2a85-f64d-470f-9629-007b31d226b6"